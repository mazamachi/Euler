class Integer 
	def sosu?
		if self <= 1
			return false
		else
			m = Math.sqrt(self)
			for i in 2..m
				if self%i == 0
					return false
				end
			end
			return true
		end
	end
end

class Array
	def array_sosu?
		if self == nil
			return false
		end
		self.each do |n|
			unless n.sosu?
				return false
			end
		end
		return true
	end
end

def kumiawase(ar)#ar中の2つのIntegerを任意に選んで組み合わせる。
	ans = []
	ar.each do |first|
		s = first.to_s
		(ar-[first]).each do |second|
			ans << (s+second.to_s).to_i
		end
	end
	ans.sort
end

a = [[3],[7],[11]]
b = [[],[],[]]
b[1][0] =[[3]]
b[1][1] =[]
b[1][2] =[]
b[1][3] =[[3, 7, 109, 673], [31, 1123, 2029, 2281], [3, 37, 67, 2377], [7, 1237, 1549, 3019], [7, 61, 1693, 3181], [7, 2089, 2953, 3181], [7, 829, 2671, 3361], [37, 1549, 2707, 3463], [79, 967, 1117, 3511], [79, 1801, 3253, 3547], [7, 433, 1471, 3613], [37, 991, 2269, 3613], [1753, 1951, 3547, 3643], [7, 19, 97, 3727], [7, 19, 1249, 3727], [1447, 2803, 3769, 4051], [3, 7, 541, 4159], [3, 37, 2377, 4159], [7, 2089, 3181, 4219], [1783, 2953, 3643, 4273], [7, 19, 97, 4507], [397, 907, 3919, 4567], [199, 3259, 4327, 5107], [31, 1123, 2029, 5281], [13, 61, 2383, 5431], [163, 367, 4597, 5563], [97, 379, 2221, 5581], [97, 2221, 4513, 5581], [7, 19, 3727, 5659], [31, 3037, 3331, 5701], [7, 2269, 3613, 5821], [37, 2707, 4909, 5857], [3, 2503, 5281, 5869], [3, 37, 67, 5923], [313, 1231, 4231, 6037], [313, 1747, 4231, 6037], [13, 19, 5077, 6043], [19, 31, 1237, 6271], [1087, 5413, 5569, 6451], [127, 2281, 6361, 6481], [3, 31, 1237, 6571], [283, 1321, 3001, 6607], [3391, 3433, 3643, 6607], [229, 613, 4021, 6733], [151, 4801, 5197, 6733], [13, 5197, 5701, 6733], [7, 1249, 3727, 6949], [7, 1249, 4441, 6949], [967, 5623, 6421, 6949], [43, 613, 6547, 6967], [2593, 3307, 5443, 7039], [5023, 5443, 6841, 7039], [5443, 6637, 6841, 7039], [3, 73, 6793, 7159], [1621, 2767, 3187, 7477], [1123, 3919, 5281, 7489], [1153, 1699, 6691, 7507], [67, 619, 5419, 7687], [7, 127, 6949, 7723], [2269, 4057, 4663, 7879], [397, 2251, 2593, 7927], [151, 397, 4657, 7933], [151, 4657, 6217, 7933], [397, 4657, 7177, 7933], [1459, 1873, 3511, 7963], [3, 37, 4729, 7963], [3, 37, 5923, 7963], [13, 127, 6733, 7993], [3109, 4801, 6733, 7993], [37, 1873, 7963, 8011], [1873, 3511, 7963, 8011], [3187, 4561, 6379, 8017], [13, 1543, 3967, 8053], [37, 4177, 7537, 8101], [7, 541, 2467, 8167], [1483, 3457, 5869, 8209], [1993, 3457, 5869, 8209], [4663, 5839, 7753, 8233], [79, 3253, 3517, 8263], [31, 2311, 4549, 8287], [2017, 2689, 4423, 8317], [691, 727, 5197, 8389], [13, 5197, 5701, 8389], [13, 5197, 6733, 8389], [13, 5701, 6733, 8389], [5197, 5701, 6733, 8389]]
b[1][4] =[]
b[2][0] =[[3]]
b[2][1] =[]
b[2][2] =[]
b[2][3] =[[23, 311, 677, 827], [11, 239, 1049, 1847], [11, 239, 1091, 1847], [11, 23, 743, 1871], [23, 677, 827, 1871], [3, 17, 449, 2069], [3, 11, 2069, 2297], [3, 17, 2069, 2297], [269, 617, 887, 2741], [1451, 2699, 3413, 3761], [809, 1361, 2141, 3947], [1319, 2243, 2789, 4133], [23, 47, 1481, 4211], [3, 467, 617, 4253], [101, 2633, 2699, 4337], [2039, 3299, 3767, 4523], [17, 2741, 3917, 4649], [47, 947, 1439, 4931], [89, 107, 1061, 4973], [23, 2003, 3557, 5051], [11, 4013, 4643, 5153], [47, 251, 5147, 5273], [419, 449, 563, 5297], [809, 3947, 4679, 5393], [23, 47, 4211, 5483], [2897, 4721, 4877, 5501], [131, 797, 2411, 5519], [11, 239, 3467, 5807], [71, 821, 1163, 5849], [11, 353, 4967, 5849], [23, 1607, 5009, 5849], [11, 4643, 5153, 5849], [23, 47, 2333, 5927], [1583, 1877, 2447, 6113], [677, 2309, 4451, 6257], [467, 587, 617, 6323], [23, 743, 1871, 6323], [23, 89, 2357, 6323], [11, 1103, 5807, 6329], [3, 17, 449, 6353], [29, 71, 5237, 6563], [3, 17, 449, 6599], [2063, 2243, 5477, 6599], [47, 2333, 5297, 6701], [1523, 3203, 5279, 6827], [17, 2741, 3917, 6899], [29, 3767, 4523, 6911], [1439, 2003, 5657, 6983], [1439, 3833, 5657, 6983], [11, 2297, 4967, 7127], [11, 23, 6329, 7331], [2801, 4733, 6689, 7331], [41, 1013, 7187, 7331], [239, 1049, 1847, 7523], [1103, 3041, 6317, 7529], [83, 449, 6491, 7583], [23, 2819, 3617, 7607], [401, 2441, 3671, 7691], [401, 3407, 3671, 7691], [1217, 2309, 5081, 7817], [419, 443, 7757, 7883], [521, 1523, 2447, 7907], [1523, 2447, 5813, 7907], [1289, 2801, 4733, 7919], [593, 3203, 3467, 7949], [1283, 1619, 4127, 7949], [677, 1283, 5807, 7949], [233, 1583, 7043, 7949], [1367, 1733, 7043, 7949], [1181, 1847, 2687, 8069], [2243, 5477, 6599, 8081], [71, 4517, 6869, 8087], [251, 5273, 5651, 8093], [59, 2531, 4889, 8123], [89, 5003, 5087, 8147], [11, 23, 1871, 8171], [701, 1607, 5471, 8171], [1583, 5861, 6143, 8171], [3, 11, 2069, 8219], [11, 353, 4967, 8219], [353, 4967, 5573, 8219], [23, 2357, 6323, 8237], [1721, 3347, 8231, 8273]]
b[2][4] =[]


i = 8389
judge = true
while b[1][4] == [] && b[2][4] == []
	p i
	if i.sosu?
		amari = i%3
		b[amari][0] << [i]
#		p b[amari]
		for kazu in 0...b[amari].length-1
			for ind in 0...b[amari][kazu].length
				if b[amari][kazu][ind][-1]==i
					break
				end
				if kumiawase(b[amari][kazu][ind]+[i]).array_sosu?
					b[amari][kazu+1] << (b[amari][kazu][ind]+[i])
				end
			end
		end
	end
	p b[amari]
	i += 1
end
p b[1][4]
s = b[1][4][0].inject{|a,b| a += b}
p s

p b[2][4]